This repository contains examples to use lombok

What is lombok?
A compile time annotation system (annotation + pre processor) which helps to minimize line of code. It has

 1. easy variable declaration, val (similar to var of dotnet) works for final variable only.
 2. Annotation that creates methods
    a.@Getter
    b.@Setter

 val
 Finally! Hassle-free final local variables.
 @NonNull
 or: How I learned to stop worrying and love the NullPointerException.
 @Cleanup
 Automatic resource management: Call your close() methods safely with no hassle.
 @Getter / @Setter
 Never write public int getFoo() {return foo;} again.
 @ToString
 No need to start a debugger to see your fields: Just let lombok generate a toString for you!
 @EqualsAndHashCode
 Equality made easy: Generates hashCode and equals implementations from the fields of your object.
 @NoArgsConstructor, @RequiredArgsConstructor and @AllArgsConstructor
 Constructors made to order: Generates constructors that take no arguments, one argument per final / non-null field, or one argument for every field.
 @Data
 All together now: A shortcut for @ToString, @EqualsAndHashCode, @Getter on all fields, and @Setter on all non-final fields, and @RequiredArgsConstructor!
 @Value
 Immutable classes made very easy.
 @Builder
 ... and Bob's your uncle: No-hassle fancy-pants APIs for object creation!
 @SneakyThrows
 To boldly throw checked exceptions where no one has thrown them before!
 @Synchronized
 synchronized done right: Don't expose your locks.
 @Getter(lazy=true)
 Laziness is a virtue!
 @Log
 Captain's Log, stardate 24435.7: "What was that line again?"
 Configuration system
 Lombok, made to order: Configure lombok features in one place for your entire project or even your workspace.
 Experimental features
 Here be dragons: Extra features which aren't quite ready for prime time yet.

